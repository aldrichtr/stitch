name: '[cicd] Generate a Pester test report'

run-name: Creating Pester test report for ${{ github.base_ref }} by @${{ github.actor }}

on:
  - workflow_dispatch

env:
  repo: ${{ github.event.repository.name }}

jobs:
  test:
    name: Run Pester to produce reports and badges
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1
      - name: Run Pester Tests
        id: pester_tests
        uses: aldrichtr/pester-tests-report@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

          #region tests
          include_paths: tests
          include_tags: unit
          exclude_tags: "ci.exclude"
          #endregion tests

          #region report
          report_title: Pester test report for ${{ env.repo }}
          #endregion report

          #region gist
          gist_token: ${{ secrets.GIST_TOKEN }}
          gist_name: "pester_test_report-(${{ env.repo }})"
          gist_badge_label: Pester tests %ExecutedAt% %PassedCount%/%TotalCount%
          #endregion gist

          #region coverage
          coverage_paths: "source/stitch"
          coverage_gist: "Code coverage report (${{ env.repo }})"
          #endregion coverage

      - name: dump test results
        shell: pwsh
        run: |
          import-module GitHubActions

          $test_results_path  = '${{ steps.pester_tests.outputs.test_results_path }}'
          $error_message      = '${{ steps.pester_tests.outputs.error_message }}'
          $error_clixml_path  = '${{ steps.pester_tests.outputs.error_clixml_path }}'
          $result_clixml_path = '${{ steps.pester_tests.outputs.result_clixml_path }}'
          $result_value       = '${{ steps.pester_tests.outputs.result_value }}'
          $total_count        = '${{ steps.pester_tests.outputs.total_count }}'
          $passed_count       = '${{ steps.pester_tests.outputs.passed_count }}'
          $failed_count       = '${{ steps.pester_tests.outputs.failed_count }}'

          Write-ActionInfo "Found these outputs from [pester_tests]:"
          Write-ActionInfo "  * test_results_path  = $test_results_path"
          Write-ActionInfo "  * error_message      = $error_message"
          Write-ActionInfo "  * error_clixml_path  = $error_clixml_path"
          Write-ActionInfo "  * result_clixml_path = $result_clixml_path"
          Write-ActionInfo "  * result_value       = $result_value"
          Write-ActionInfo "  * total_count        = $total_count"
          Write-ActionInfo "  * passed_count       = $passed_count"
          Write-ActionInfo "  * failed_count       = $failed_count"

          if ($error_clixml_path) {
            $er = Import-Clixml -Path $error_clixml_path
            Write-ActionInfo "Loaded up the ErrorRecord:"
            $er
            $er.Exception
          }

          if ($result_clixml_path) {
            $pr = Import-Clixml -Path $result_clixml_path
            Write-ActionInfo "Loaded up the Pester Result:"
            $pr
          }
